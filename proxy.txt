
# Настройка прокси-сервера для приложения "Тонко"

Это руководство описывает, как настроить и развернуть прокси-сервер на платформе Vercel для обхода проблем с CORS при взаимодействии с Google Apps Script.

## Обзор

Прокси-сервер выступает в качестве посредника между вашим веб-приложением и Google Apps Script API, решая проблемы с CORS и обрабатывая запросы и файлы должным образом.

## Шаг 1: Подготовка к развертыванию на Vercel

1. Создайте аккаунт на [Vercel](https://vercel.com/) если его ещё нет
2. Установите Vercel CLI (опционально для локального тестирования):
   ```
   npm i -g vercel
   ```

## Шаг 2: Настройка переменных окружения

В консоли Vercel необходимо настроить переменную окружения:

1. Перейдите в настройки вашего проекта на Vercel
2. Выберите вкладку "Environment Variables"
3. Добавьте переменную:
   - `TARGET_URL` = URL вашего развернутого Google Apps Script Web App
   Пример: `https://script.google.com/macros/s/YOUR_DEPLOYMENT_ID/exec`
   
   **ВАЖНО**: Убедитесь, что URL заканчивается на `/exec`!

## Шаг 3: Развертывание прокси на Vercel

### Вариант 1: Развертывание через GitHub

1. Создайте репозиторий на GitHub
2. Загрузите файлы из папки `proxy` в репозиторий:
   - `index.js`
   - `package.json`
   - `vercel.json`

3. На платформе Vercel:
   - Нажмите "Add New" > "Project"
   - Выберите свой репозиторий
   - Настройте переменные окружения как описано в Шаге 2
   - Нажмите "Deploy"

### Вариант 2: Развертывание через Vercel CLI

1. Перейдите в папку с файлами прокси
   ```
   cd proxy
   ```

2. Авторизуйтесь в Vercel CLI
   ```
   vercel login
   ```

3. Разверните проект
   ```
   vercel
   ```

4. Следуйте инструкциям мастера развертывания. Когда вас спросят о переменных окружения, добавьте `TARGET_URL`.

5. После завершения тестового развертывания, разверните в production:
   ```
   vercel --prod
   ```

## Шаг 4: Проверка правильности настройки прокси

После развертывания прокси, проверьте его работоспособность следующим образом:

1. Откройте браузер и перейдите по адресу:
   ```
   https://YOUR_PROXY_URL/api?action=getEmployees
   ```
   
   Если вы видите JSON-ответ без ошибок CORS, значит прокси работает правильно.

2. Проверьте в консоли разработчика вашего браузера, что запросы к API выполняются без ошибок CORS.

3. Протестируйте также эндпоинт проверки работоспособности:
   ```
   https://YOUR_PROXY_URL/health
   ```
   Должен вернуть: `{"status":"ok"}`

## Шаг 5: Интеграция с приложением

После успешной настройки прокси, убедитесь, что в файле `src/services/api.ts` указан правильный URL прокси-сервера:

```typescript
const API_BASE_URL = 'https://YOUR_PROXY_URL/api';
```

## Часто встречающиеся проблемы и их решения

### Проблема: Ошибка "Failed to fetch"

**Решение**:
1. Убедитесь, что прокси-сервер запущен и доступен.
2. Проверьте корректность URL прокси в вашем приложении.
3. Убедитесь, что переменная окружения `TARGET_URL` указана правильно.
4. Проверьте наличие `/exec` в конце URL Google Apps Script.
5. Убедитесь, что ваш Google Apps Script опубликован с доступом "Anyone, even anonymous".

### Проблема: Ошибка "output.setHeader is not a function"

**Решение**: Эта ошибка возникает из-за несовместимости в API Google Apps Script. В файле `appscript.txt` используйте `ContentService.createTextOutput` вместо непосредственной установки заголовков:

```javascript
// Правильно:
return ContentService.createTextOutput(JSON.stringify(result))
  .setMimeType(ContentService.MimeType.JSON);
```

### Проблема: Прокси развернут, но данные не загружаются

**Решение**:
1. Проверьте, что переменная окружения `TARGET_URL` указывает на правильный URL.
2. Убедитесь, что Google Apps Script опубликован с доступом "Anyone, even anonymous".
3. Добавьте логирование запросов в прокси, чтобы отследить проблему.
4. Проверьте, что все названия столбцов в Google Sheets соответствуют ожидаемым в коде.

### Проблема: Файлы не загружаются

**Решение**:
1. Убедитесь, что multer правильно настроен в прокси.
2. Проверьте, что FormData корректно передается на сервер.
3. Проверьте права доступа к Google Drive из Google Apps Script.

### Проблема: Ошибка "ScriptError: Недостаточно прав..."

**Решение**:
1. Убедитесь, что Google Apps Script имеет необходимые права доступа к Sheets и Drive.
2. Перепубликуйте скрипт с правами доступа "Execute as: Me" и "Who has access: Anyone".
3. Проверьте, что аккаунт, от имени которого запущен скрипт, имеет доступ к таблице.

## Рекомендации по безопасности

1. Рассмотрите возможность добавления базовой авторизации для прокси.
2. Не храните конфиденциальные данные в переменных окружения Vercel без шифрования.
3. Регулярно проверяйте журналы Vercel на предмет подозрительной активности.

## Мониторинг и отладка

1. Используйте встроенные логи Vercel для отслеживания запросов и ошибок:
   - Перейдите в консоль Vercel
   - Выберите ваш проект
   - Перейдите в раздел "Deployments" > выберите последнее развертывание > "Logs"
   
2. Регулярно проверяйте статус прокси и его производительность через эндпоинт `/health`.

3. Для отладки добавьте временные `console.log` в код прокси и просматривайте их в логах Vercel.
